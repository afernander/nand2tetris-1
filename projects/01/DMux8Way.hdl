// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    Not(in=sel[0], out=nots0);
    Not(in=sel[1], out=nots1);
    Not(in=sel[2], out=nots2);

    // 4 combs for s0, s1
    And(a=sel[0], b=sel[1], out=s0ands1);
    And(a=sel[0], b=nots1, out=s0andnots1);
    And(a=nots0, b=sel[1], out=nots0ands1);
    And(a=nots0, b=nots1, out=nots0andnots1);

    // 8 combs for s0, s1, s2
    And(a=sel[2], b=s0ands1, out=s0ands1ands2);
    And(a=nots2, b=s0ands1, out=s0ands1andnots2);
    And(a=sel[2], b=s0andnots1, out=s0andnots1ands2);
    And(a=nots2, b=s0andnots1, out=s0andnots1andnots2);
    And(a=sel[2], b=nots0ands1, out=nots0ands1ands2);
    And(a=nots2, b=nots0ands1, out=nots0ands1andnots2);
    And(a=sel[2], b=nots0andnots1, out=nots0andnots1ands2);
    And(a=nots2, b=nots0andnots1, out=nots0andnots1andnots2);

    And(a=in, b=nots0andnots1andnots2, out=a);
    And(a=in, b=s0andnots1andnots2, out=b);
    And(a=in, b=nots0ands1andnots2, out=c);
    And(a=in, b=s0ands1andnots2, out=d);
    And(a=in, b=nots0andnots1ands2, out=e);
    And(a=in, b=s0andnots1ands2, out=f);
    And(a=in, b=nots0ands1ands2, out=g);
    And(a=in, b=s0ands1ands2, out=h);
}